services:
  mongo:
    image: mongo:6.0
    container_name: ds-assignment-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: ds-assignment-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"

  api-gateway:
    image: ds-assignment-api-gateway:${VERSION}
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
      args:
        SERVICE_PORT: ${API_GATEWAY_PORT}
    container_name: ds-assignment-api-gateway
    env_file:
      - .env
    environment:
      - PORT=${API_GATEWAY_PORT}
      - USER_SERVICE_URL=http://user-service:${USER_SERVICE_PORT}
      - RESTAURANT_SERVICE_URL=http://restaurant-service:${RESTAURANT_SERVICE_PORT}
      - ORDER_SERVICE_URL=http://order-service:${ORDER_SERVICE_PORT}
      - DELIVERY_SERVICE_URL=http://delivery-service:${DELIVERY_SERVICE_PORT}
      - PAYMENT_SERVICE_URL=http://payment-service:${PAYMENT_SERVICE_PORT}
      - NOTIFICATION_SERVICE_URL=http://notification-service:${NOTIFICATION_SERVICE_PORT}
    ports:
      - "${API_GATEWAY_PORT}:3000"
    depends_on:
      - mongo
      - user-service
      - restaurant-service
      - order-service
      - delivery-service
      - payment-service
      - notification-service

  user-service:
    image: ds-assignment-user:${VERSION}
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: ds-assignment-user
    env_file:
      - .env
    environment:
      - PORT=${USER_SERVICE_PORT}
    ports:
      - "${USER_SERVICE_PORT}:3001"
    depends_on:
      - mongo

  restaurant-service:
    image: ds-assignment-restaurant:${VERSION}
    build:
      context: ./backend/restaurant-service
      dockerfile: Dockerfile
      args:
        SERVICE_PORT: ${RESTAURANT_SERVICE_PORT}
    container_name: ds-assignment-restaurant
    env_file:
      - .env
    environment:
      - PORT=${RESTAURANT_SERVICE_PORT}
    ports:
      - "${RESTAURANT_SERVICE_PORT}:3002"
    depends_on:
      - mongo

  order-service:
    image: ds-assignment-order:${VERSION}
    build:
      context: ./backend/order-service
      dockerfile: Dockerfile
      args:
        SERVICE_PORT: ${ORDER_SERVICE_PORT}
    container_name: ds-assignment-order
    env_file:
      - .env
    environment:
      - PORT=${ORDER_SERVICE_PORT}
    ports:
      - "${ORDER_SERVICE_PORT}:3004"
    depends_on:
      - mongo

  delivery-service:
    image: ds-assignment-delivery:${VERSION}
    build:
      context: ./backend/delivery-service
      dockerfile: Dockerfile
      args:
        SERVICE_PORT: ${DELIVERY_SERVICE_PORT}
    container_name: ds-assignment-delivery
    env_file:
      - .env
    environment:
      - PORT=${DELIVERY_SERVICE_PORT}
    ports:
      - "${DELIVERY_SERVICE_PORT}:3005"
    depends_on:
      - mongo

  payment-service:
    image: ds-assignment-payment:${VERSION}
    build:
      context: ./backend/payment-service
      dockerfile: Dockerfile
      args:
        SERVICE_PORT: ${PAYMENT_SERVICE_PORT}
    container_name: ds-assignment-payment
    env_file:
      - .env
    environment:
      - PORT=${PAYMENT_SERVICE_PORT}
    ports:
      - "${PAYMENT_SERVICE_PORT}:3003"
    depends_on:
      - mongo

  notification-service:
    image: ds-assignment-notification:${VERSION}
    build:
      context: ./backend/notification-service
      dockerfile: Dockerfile
      args:
        SERVICE_PORT: ${NOTIFICATION_SERVICE_PORT}
    container_name: ds-assignment-notification
    env_file:
      - .env
    environment:
      - PORT=${NOTIFICATION_SERVICE_PORT}
    ports:
      - "${NOTIFICATION_SERVICE_PORT}:3006"
    depends_on:
      - mongo
      - rabbitmq

volumes:
  mongo-data:
